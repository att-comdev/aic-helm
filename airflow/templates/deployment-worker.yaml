# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.manifests.deployment_worker }}
{{- $envAll := . }}
{{- $dependencies := .Values.dependencies.server }}
{{- $mounts_airflow_worker := .Values.pod.mounts.airflow_worker.airflow_worker }}
{{- $mounts_airflow_worker_init := .Values.pod.mounts.airflow_worker.init_container }}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: airflow-worker
spec:
  replicas: {{ .Values.pod.replicas.airflow.worker }}
{{ tuple $envAll | include "helm-toolkit.snippets.kubernetes_upgrades_deployment" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "airflow" "worker" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
    spec:
      nodeSelector:
        {{ .Values.labels.node_selector_key }}: {{ .Values.labels.node_selector_value }}
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.server.timeout | default "30" }}
      initContainers:
{{ tuple $envAll $dependencies $mounts_airflow_worker_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: airflow-perms
          image: {{ .Values.images.airflow }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          securityContext:
            runAsUser: 0
{{ tuple $envAll $envAll.Values.pod.resources.airflow.worker | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          command:
            - chown
            - -R
            - "airflow:"
            - {{ .Values.conf.airflow.core.base_log_folder }}
          volumeMounts:
            - name: airflow-logs
              mountPath: {{ .Values.conf.airflow.core.base_log_folder }}
        {{ if eq .Values.storage "rbd" }}
        - name: ceph-keyring-placement
          image: {{ .Values.images.airflow }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          securityContext:
            runAsUser: {{ .Values.pod.user.airflow.uid }}
          env:
            - name: RBD_STORE_USER
              value: {{ .Values.conf.airflow.airflow_store.airflow.store.rbd_store_user | quote }}
          command:
            - /tmp/ceph-keyring.sh
          volumeMounts:
            - name: etcceph
              mountPath: /etc/ceph
            - name: airflow-bin
              mountPath: /tmp/ceph-keyring.sh
              subPath: ceph-keyring.sh
              readOnly: true
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
        {{ end }}
      containers:
        - name: airflow-worker
          image: {{ .Values.images.airflow }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
{{ tuple $envAll $envAll.Values.pod.resources.airflow.worker | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          securityContext:
            runAsUser: {{ .Values.pod.user.airflow.uid }}
          env:
          - name: AIRFLOW_CONN_AIRFLOWS_OWN_DB
            valueFrom:
                secretKeyRef:
                    name: {{ .Values.secrets.postgresql.admin }}
                    key: DB_CONNECTION
          ports:
            - containerPort: {{ .Values.network.airflow.worker.port }}
          args: ["worker"]
          readinessProbe:
            tcpSocket:
              port: {{ .Values.network.airflow.worker.port }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: airflow-etc
              mountPath: /usr/local/airflow/airflow.cfg
              subPath: airflow.cfg
              readOnly: true
            - name: dags
              mountPath: {{ .Values.conf.airflow.core.dags_folder }}
            - name: plugins
              mountPath: {{ .Values.conf.airflow.core.plugins_folder }}
            - name: airflow-logs
              mountPath: {{ .Values.conf.airflow.core.base_log_folder }}
{{- if eq .Values.storage "rbd" }}
            - name: etcceph
              mountPath: /etc/ceph
            - name: ceph-etc
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
              readOnly: true
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
{{- end }}
            - name: docker
              mountPath: /var/run
              readOnly: false
            - name: pod-var-lib-docker
              mountPath: /var/lib/docker
              readOnly: false
{{ if $mounts_airflow_worker.volumeMounts }}{{ toYaml $mounts_airflow_worker.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: airflow-etc
          configMap:
            name: airflow-etc
            defaultMode: 0444
        - name: dags
          hostPath:
            path: {{ .Values.pod.mounts.dag_path }}
        - name: plugins
          hostPath:
            path: {{ .Values.pod.mounts.plugin_path }}
{{- if eq .Values.storage "pvc" }}
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
{{ else }}
        - name: airflow-logs
          emptyDir: {}
{{- end }}
{{- if eq .Values.storage "rbd" }}
        - name: etcceph
          emptyDir: {}
        - name: ceph-etc
          configMap:
            name: ceph-etc
            defaultMode: 0444
        - name: ceph-keyring
          secret:
            secretName: {{ .Values.secrets.rbd | quote }}
{{- end }}
        - name: docker
          hostPath:
            path: /var/run
        - name: pod-var-lib-docker
          hostPath:
            path: /var/lib/docker
{{ if $mounts_airflow_worker.volumes }}{{ toYaml $mounts_airflow_worker.volumes | indent 8 }}{{ end }}
{{- end }}
