# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file provides defaults for armada

replicas:
  armada: 1

labels:
  node_selector_key: ucp-control-plane
  node_selector_value: enabled

images:
  armada: quay.io/attcomdev/armada:latest
  dep_check: docker.io/kolla/ubuntu-source-kubernetes-entrypoint:4.0.0
  ks_user: docker.io/kolla/ubuntu-source-kolla-toolbox:3.0.3
  ks_service: docker.io/kolla/ubuntu-source-kolla-toolbox:3.0.3
  ks_endpoints: docker.io/kolla/ubuntu-source-kolla-toolbox:3.0.3
  pull_policy: "IfNotPresent"

release_group: null

network:
  ingress:
    public: true
  port: 9000
  node_port: 31902
  enable_node_port: true

dependencies:
  #  db_init:
  #    services:
  #    - service: postgresql
  #      endpoint: internal
  #  db_sync:
  #    jobs:
  #    - armada-db-init
  #    services:
  #    - service: postgresql
  #      endpoint: internal
  ks_user:
    services:
    - service: identity
      endpoint: internal
  ks_service:
    services:
    - service: identity
      endpoint: internal
  ks_endpoints:
    jobs:
    - armada-ks-service
    services:
    - service: identity
      endpoint: internal
  armada:
    jobs:
    - armada-ks-endpoints
    - armada-ks-user
    - armada-ks-endpoints
    services:
    - service: identity
      endpoint: internal
    - service: barbican
      endpoint: internal

# typically overriden by environmental
# values, but should include all endpoints
# required by this chart
endpoints:
  cluster_domain_suffix: cluster.local
  identity:
    name: keystone
    auth:
      user:
        region_name: RegionOne
        role: admin
        project_name: service
        project_domain_name: default
        user_domain_name: default
        username: armada
        password: password
      admin:
        region_name: RegionOne
        project_name: admin
        password: password
        username: admin
        user_domain_name: default
        project_domain_name: default
    hosts:
      default: keystone-api
      public: keystone
    path:
      default: /v3
    scheme:
      default: http
    port:
      admin:
        default: 35357
      api:
        default: 80
    host_fqdn_override:
      default: null
  armada:
    name: armada
    hosts:
      default: armada-int
      public: armada-api
    port:
      api:
        default: 9000
    path:
      default: /api/v1.0
    scheme:
      default: http
    host_fqdn_override:
      default: null
      #  postgresql:
      #    name: postgresql
      #    auth:
      #      admin:
      #        username: armada
      #        password: password
      #      user:
      #        username: armada
      #        password: password
      #    hosts:
      #      default: postgresql
      #    path: /armada
      #    scheme: postgresql+psycopg2
      #    port:
      #      postgresql:
      #        default: 5432
      #    host_fqdn_override:
      #      default: null

secrets:
  identity:
    admin: armada-keystone-admin
    user: armada-keystone-user
    #  postgresql:
    #    admin: armada-db-admin
    #    user: armada-db-user

# database:
#  postgresql:
#    db_name: armada
#    db_root_user: postgres

conf:
  armada:
    keystone_authtoken:
      auth_type: password
      auth_version: 3
      delay_auth_decision: True
      password: aramda
      project_domain_name: ucp
      project_name: service
      user_domain_name: ucp
      user_name: armada
    oslo_policy:
      policy_file: /etc/armada/policy.yaml
  paste:
    app:armada_api:
      paste: armada.api.server:paste_start_armada
    pipeline:main:
      pipeline: authtoken armada-api
    filter:authtoken:
      filter_factory: keystonemiddleware.auth_token:filter_factory
  policy:
    admin_required: "role:admin"
    service_or_admin: "rule:admin_required or rule:service_role"
    service_role: "role:service"
    armada:create_endpoints: "rule:admin_required"
    armada:validate_manifest: "rule:admin_required"
    armada:test_release: "rule:admin_required"
    armada:test_manifest: "rule:admin_required"
    tiller:get_status: "rule:admin_required"
    tiller:get_released: "rule:admin_required"

pod:
  lifecycle:
    upgrades:
      deployments:
        revision_history: 3
        pod_replacement_strategy: RollingUpdate
        rolling_update:
          max_unavailable: 1
          max_surge: 3
    termination_grace_period:
      armada:
        timeout: 30
  resources:
    enabled: false
    api:
      limits:
        memory: "128Mi"
        cpu: "100m"
      requests:
        memory: "128Mi"
        cpu: "100m"
    jobs:
      ks_user:
        limits:
          memory: "128Mi"
          cpu: "100m"
        requests:
          memory: "128Mi"
          cpu: "100m"
      ks_service:
        limits:
          memory: "128Mi"
          cpu: "100m"
        requests:
          memory: "128Mi"
          cpu: "100m"
      ks_endpoints:
        limits:
          memory: "128Mi"
          cpu: "100m"
        requests:
          memory: "128Mi"
          cpu: "100m"

manifests:
  configmap_bin: true
  configmap_etc: true
  ingress_api: true
  job_ks_endpoints: true
  job_ks_service: true
  job_ks_user: true
  secret_keystone: true
  service: true
  service_api: true
  service_ingress: true
